# -*- coding: utf-8 -*-
"""XGBoost

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1o8vSj2v5ArJ3UjhGlZ6Yh0wGhI5n4WNg
"""

import tensorflow as tf

import numpy as np
import pandas as pd

dataset = pd.read_csv('enter your dataset')
X = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2)

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

from sklearn.preprocessing import LabelEncoder
encoder = LabelEncoder()
y_train = encoder.fit_transform(y_train)
y_test = encoder.transform(y_test)

from xgboost import XGBClassifier
classifier = XGBClassifier()
classifier.fit(X_train,y_train)

y_pred = classifier.predict(X_test)

from sklearn.metrics import accuracy_score
score = accuracy_score(y_test,y_pred)
print(score)

from sklearn.model_selection import cross_val_score
score  = cross_val_score(estimator = classifier,X=X_train,y=y_train,cv=10)

print(score)

print(score.mean())

from sklearn.metrics import recall_score
scor = recall_score(y_test,y_pred)
print(scor)